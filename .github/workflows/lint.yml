name: Lint (pylint)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint-json2html

      - name: Detectar archivos Python rastreados
        id: targets
        shell: bash
        run: |
          TARGETS="$(git ls-files '*.py' || true)"
          echo "targets=${TARGETS}" >> "$GITHUB_OUTPUT"

      # 1) Reporte SIEMPRE (no rompe el job)
      - name: Generar reporte (JSON + HTML, no romper)
        if: ${{ steps.targets.outputs.targets != '' }}
        shell: bash
        run: |
          pylint --output-format=json --exit-zero ${{ steps.targets.outputs.targets }} > pylint.json
          pylint-json2html -o pylint_report.html pylint.json

      - name: Subir reporte como artefacto
        if: ${{ steps.targets.outputs.targets != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: pylint-report
          path: pylint_report.html

      # 2) Quality gate (rompe el job si hay hallazgos o score bajo)
      - name: Quality gate (todo el repo, umbral 9.5)
        if: ${{ steps.targets.outputs.targets != '' }}
        shell: bash
        run: |
          pylint --fail-under=9.5 ${{ steps.targets.outputs.targets }}
