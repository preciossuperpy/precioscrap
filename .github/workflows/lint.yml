name: Lint (pylint)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Instalar dependencias (pylint + reporte HTML)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint-json2html

      # Detecta archivos Python rastreados por git (NUL-delimited)
      - name: Detectar archivos Python rastreados
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          git ls-files -z '*.py' > .py_targets || true
          if [ ! -s .py_targets ]; then
            echo "No se encontraron archivos .py rastreados por git."
            # Marcamos un flag en el entorno para condicionar los pasos siguientes
            echo "PY_FOUND=false" >> $GITHUB_ENV
          else
            echo "PY_FOUND=true" >> $GITHUB_ENV
          fi

      # Genera el reporte (no rompe el job) si hay archivos
      - name: Generar reporte (JSON + HTML, no romper)
        if: env.PY_FOUND == 'true'
        shell: bash
        run: |
          set -euo pipefail
          # Ejecuta pylint y genera JSON sin romper el step
          xargs -0 -a .py_targets pylint --output-format=json --exit-zero > pylint.json
          # Convierte a HTML
          pylint-json2html -o pylint_report.html pylint.json

      - name: Subir artefacto (reporte HTML)
        if: env.PY_FOUND == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: pylint-report
          path: pylint_report.html

      # Quality gate: falla si el puntaje global < 9.5
      - name: Quality gate (umbral 9.5)
        if: env.PY_FOUND == 'true'
        shell: bash
        run: |
          set -euo pipefail
          xargs -0 -a .py_targets pylint --fail-under=9.5
